name: Wheels

on:
  push:
    branches: [master]
    tags:
      - '*'
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          #- os: windows-2019
          #  cmake_generator: "Visual Studio 16 2019"
          #  cmake_generator_platform: "x64"
          #  arch: AMD64
          #- os: windows-2019
          #  cmake_generator: "Visual Studio 16 2019"
          #  cmake_generator_platform: "Win32"
          #  arch: x86
          - os: ubuntu-latest
            arch: x86_64
          #- os: ubuntu-24.04-arm
          #  arch: aarch64
          #- os: ubuntu-latest
          #  arch: i686
          # macos-latest runs on arm64 architecture and cibuildwheel cross
          # compiling for x86_64 fails
          - os: macos-13
            arch: x86_64
            macos_target: '13.0'
          - os: macos-latest
            arch: arm64
            macos_target: '14.0'

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      #- name: Install Python dependencies
      #  run: pip install 'segyio==1.9.13' pybind11 pytest xtgeo

      # Minimum supported macOS version set to 13.0 (amd64) and 14.0 (arm64)
      # due to OpenMP installed via Homebrew
      - name: Set MacOS deployment targetn
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=${{ matrix.macos_target }}" >> $GITHUB_ENV
      - name: Build wheels
        env:
          #CIBW_BEFORE_BUILD: pip install pybind11
          #CIBW_BEFORE_BUILD: CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(pybind11-config --cmakedir);/usr/local/opt/libomp;/opt/homebrew/opt/libomp"
          #CIBW_ENVIRONMENT: CMAKE_PREFIX_PATH="$(pybind11-config --cmakedir)"
          #CIBW_BEFORE_BUILD_LINUX: yum install -y cmake gcc gcc-c++ make boost-math eigen3-devel; pip install pybind11; export CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(pybind11-config --cmakedir)"
          ##CIBW_ENVIRONMENT: CMAKE_PREFIX_PATH="$(pybind11-config --cmakedir)"

          #CIBW_BEFORE_BUILD_MACOS: brew install cmake boost eigen libomp; pip install pybind11; export CMAKE_PREFIX_PATH="$(pybind11-config --cmakedir);/usr/local/opt/libomp;/opt/homebrew/opt/libomp"; export LDFLAGS="-L/usr/local/opt/libomp/lib;-L/opt/homebrew/opt/libomp/lib"; export CPPFLAGS="-I/usr/local/opt/libomp/include;-I/opt/homebrew/opt/libomp/include"; echo "Printing OpenMP paths"; echo "/opt/homebrew/opt"; ls -l /opt/homebrew/opt/ 2> /dev/null; echo "/opt/homebrew/opt/libomp"; ls -l /opt/homebrew/opt/libomp/ 2> /dev/null; echo "/usr/local/opt/"; ls -l /usr/local/opt 2> /dev/null; echo "/usr/local/opt/libomp/"; ls -l /usr/local/opt/libomp/ 2> /dev/null; echo "Done printing"; export CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(pybind11-config --cmakedir);/usr/local/opt/libomp/;/opt/homebrew/opt/libomp/"

          #CIBW_BEFORE_BUILD_MACOS: export MACOSX_DEPLOYMENT_TARGET="${{ matrix.macos_target }}"

          #CIBW_ENVIRONMENT_WINDOWS: >
          #  CMAKE_GENERATOR="${{ matrix.cmake_generator }}"
          #  CMAKE_GENERATOR_PLATFORM="${{ matrix.cmake_generator_platform }}"
          #CIBW_SKIP: pp* *-musllinux_* cp36-* cp37-* cp38-*
          CIBW_ARCHS: ${{ matrix.arch }}
        run: |
            python -m cibuildwheel --output-dir wheelhouse .

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
          retention-days: 21

  publish:
    needs: wheels
    name: Publish wheels to PyPI
    runs-on: ubuntu-latest
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    environment:
      name: testpypi
      url: https://test.pypi.org/p/si4ti

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          merge-multiple: true
          path: ./wheelhouse/

      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

      #- name: Publish wheels to PyPI

      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    user: __token__
      #    password: ${{ secrets.PYPI_API_TOKEN }}
      #    packages-dir: ./wheelhouse/
      #    repository-url: https://test.pypi.org/legacy/

name: Wheels

on:
  push:
    branches: [main]
    tags:
      - '*'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: macos-13
            arch: x86_64
            macos_target: '13.0'
          - os: macos-latest
            arch: arm64
            macos_target: '14.0'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      # Minimum supported macOS version set to 13.0 (amd64) and 14.0 (arm64)
      # due to OpenMP installed via Homebrew
      - name: Set MacOS deployment target
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=${{ matrix.macos_target }}" >> $GITHUB_ENV
      - name: Build wheels
        # Majority of cibuildhweel configuration is done via pyproject.toml
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
        run: |
            python -m cibuildwheel --output-dir wheelhouse .

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
          retention-days: 21

  # Building source distribution
  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install build
        run: python -m pip install build

      - name: Build source distribution
        run: |
          python -m build --sdist

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libboost-dev \
            libeigen3-dev libfftw3-dev

      - name: Install and test sdist (FFTW off)
        run: |
          python -m venv venv-fftw-off
          source venv-fftw-off/bin/activate
          pip install --upgrade pip
          pip install pytest pytest-memray xtgeo segyio
          pip install -Ccmake.define.USE_FFTW=OFF $(ls dist/*) --verbose
          cd python
          python -m pytest --memray tests/

      - name: Install and test sdist (FFTW on)
        run: |
          python -m venv venv-fftw-on
          source venv-fftw-on/bin/activate
          pip install --upgrade pip
          pip install pytest pytest-memray xtgeo segyio
          pip install -Ccmake.define.USE_FFTW=ON $(ls dist/*) --verbose
          cd python
          python -m pytest --memray tests/

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*
          retention-days: 21

  publish:
    needs: [wheels, sdist]
    name: Publish wheels to PyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          merge-multiple: true
          path: ./wheelhouse/

      - uses: actions/download-artifact@v4
        with:
          pattern: sdist
          merge-multiple: true
          path: ./wheelhouse/

      - name: Publish wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./wheelhouse/
